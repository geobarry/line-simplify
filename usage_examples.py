'''
Examples of how to perform line simplification with
APSC, Ramer/Douglas-Peucker, Raposo & Visvalingam-Whyatt line simplification
algorithms

All examples simplify line to target n=50 points. It is also possible to 
simplify to a specified tolerance:
    - distance (for Ramer/Douglas-Peucker)
    - area (for APSC, Visvalingam-Whyatt)
    - hexagon radius (Raposo)
'''


# input data should be list of (x,y) tuples
Missouri = [(9597.190425,2005032.106525),(9638.656375,2005200.109825),(9638.4522,2005367.950675),(9677.8295,2005535.839875),(9756.787325,2005703.889375),(9837.829375,2005869.282825),(9920.955875,2006031.8243),(10004.07555,2006197.053675),(10128.849725,2006365.080625),(10293.217575,2006533.24405),(10413.85535,2006701.46455),(10495.0403,2006866.75175),(10620.0927,2007029.215625),(10784.5860749999,2007194.50545),(10946.8598,2007362.59465),(11111.189425,2007530.829875),(11275.4912,2007699.15215),(11396.0488,2007867.2741),(11435.378,2008035.168275),(11476.79155,2008200.294925),(11559.86005,2008362.710775),(11601.270775,2008527.948975),(11601.024625,2008696.0095),(11600.778575,2008863.98585),(11600.53265,2009031.878025),(11600.29085,2009196.970825),(11560.486575,2009362.089825),(11481.1165,2009530.0342),(11441.314625,2009695.15285),(11441.076175,2009860.21685),(11399.1915,2010027.992025),(11315.665325,2010195.819225),(11273.782925,2010363.845875),(11273.54375,2010531.848075),(11273.308725,2010696.939025),(11273.073725,2010862.001775),(11272.834775,2011029.835425),(11272.5996,2011195.0097),(11232.79105,2011360.23975),(11153.406325,2011528.1008),(11113.596625,2011695.933625),(11113.36085,2011863.906125),(11113.12495,2012031.9624),(11112.8931,2012197.13545),(11112.6653,2012359.425225),(11070.804525,2012524.42785),(10987.311675,2012692.14335),(10945.449525,2012860.0286),(10945.217125,2013028.111575),(10905.4208,2013196.05605),(10826.061475,2013363.80605),(10744.647825,2013528.754825),(10621.638975,2013690.989675),(10500.7119,2013856.11095),(10419.160575,2014023.94525),(10335.36415,2014191.66525),(10251.737825,2014359.414125),(10168.285075,2014524.420825),(10086.91765,2014689.514775),(10007.63195,2014857.467025),(9926.27135,2015022.5343),(9842.83245,2015187.487625),(9801.007775,2015355.263725),(9842.413075,2015523.2555),(9925.43065,2015691.411),(9966.833275,2015859.430325),(9966.6253,2016024.5425),(9966.42085,2016186.8555),(9966.212825,2016352.023225),(10007.5884,2016520.1265),(10090.550475,2016688.170425),(10131.9237,2016856.04935),(10171.2537,2017023.926275),(10291.902425,2017189.1378),(10456.4384,2017309.680975),(10622.9149,2017391.15655),(10787.13635,2017475.5154),(10949.33215,2017517.80655),(11113.665675,2017518.03575),(11278.02,2017518.2683),(11440.375625,2017476.43305),(11602.773,2017392.53285),(11765.256075,2017350.704475),(11929.926075,2017350.951125),(12096.510825,2017351.204075),(12260.847825,2017351.457),(12423.10355,2017351.7101),(12587.3727,2017394.038125),(12751.594025,2017478.437775),(12913.751575,2017562.7535),(13078.0416,2017688.948375),(13242.40285,2017857.0749),(13362.9557,2018022.331075),(13402.222325,2018184.680025),(13401.9378,2018352.616025),(13401.6484,2018523.4347),(13361.832,2018688.5327),(13240.738525,2018853.4105),(13117.437825,2019021.19615),(13035.8881,2019186.3657),(12914.95455,2019351.33205),(12750.3678,2019518.888),(12585.879,2019641.720675),(12423.542825,2019722.6044),(12259.125025,2019806.25915),(12094.689875,2019889.91715),(11932.318,2019973.58165),(11767.80575,2020015.29075),(11603.212025,2020015.0475),(11440.763725,2020056.8783),(11276.342175,2020140.777125),(11111.982325,2020182.611925),(10949.763875,2020182.3857),(10785.5065,2020182.160025),(10619.224175,2020139.867525),(10455.0355,2020055.513825),(10292.6828,2020013.233425),(10128.068225,2020013.020925),(9963.640875,2020012.812025),(9801.418925,2020012.60935),(9637.16665,2019970.452),(9472.963775,2019886.342475),(9310.7687,2019844.194325),(9146.4835,2019844.002675),(8982.2628,2019804.629725),(8819.957525,2019726.0777),(8655.359825,2019686.711225),(8490.904875,2019686.5329),(8328.697025,2019686.360425),(8164.408525,2019686.189175),(8000.099225,2019686.021225),(7837.849775,2019685.858775),(7673.540475,2019685.6977),(7507.171325,2019685.53805),(7342.882825,2019685.383775),(7180.5085,2019685.2347),(7015.850725,2019727.042575),(6851.28835,2019852.876925),(6688.9418,2020020.811975),(6526.583625,2020185.895275),(6405.801775,2020348.10385),(6324.551925,2020513.089025),(6241.243475,2020680.956025),(6157.9385,2020848.935625),(6074.637175,2021016.803925),(6032.922975,2021184.592225),(6032.7949,2021352.44045),(6032.66895,2021517.545575),(6032.545075,2021679.963575),(6032.418975,2021845.2362),(6073.87,2022013.1997),(6156.899425,2022181.083175),(6239.925325,2022348.967275),(6362.46504999999,2022516.996175),(6482.942125,2022685.135975),(6563.898975,2022850.36225),(6646.9138,2023012.736025),(6729.901975,2023177.90925),(6854.43565,2023345.9744),(7018.665375,2023514.15985),(7181.0165,2023682.234875),(7303.686225,2023847.39295),(7386.6754,2024009.745225),(7469.658525,2024174.868975),(7511.0685,2024342.8362),(7550.395475,2024510.941975),(7629.2084,2024679.001475),(7668.5331,2024846.882925),(7668.3703,2025014.69825),(7628.72405,2025182.587375),(7549.597825,2025347.7795),(7509.95935,2025510.126575),(7509.802525,2025675.1702),(7509.64305,2025843.012375),(7467.925275,2026010.955225),(7384.65015,2026178.94275),(7342.9351,2026346.82915),(7342.78175,2026511.871675),(7303.134275,2026674.1069),(7223.9884,2026839.07635),(7184.3382,2027006.9646),(7142.467075,2027174.9914),(7058.878625,2027342.896525),(7017.010375,2027510.69895),(6975.31435,2027675.70345),(6892.07215,2027838.012475),(6810.90935,2028003.2066),(6731.8261,2028171.06195),(6692.2139,2028338.83895),(6692.07175,2028506.677525),(6691.92945,2028674.6558),(6731.25215,2028842.751625),(6851.618825,2028968.82515),(7015.808725,2029050.10355),(7182.24215,2029128.6166),(7346.485925,2029167.949325),(7508.47935,2029210.054025),(7672.467725,2029294.116425),(7838.573225,2029336.231875),(8002.68205,2029336.396375),(8164.733525,2029336.562225),(8328.942675,2029378.68605),(8493.25135,2029462.76565),(8655.353775,2029546.846225),(8819.36455,2029630.93225),(8985.42895,2029715.135875),(9149.43245,2029799.452425),(9311.357925,2029880.887275),(9475.319875,2029959.445275),(9639.295975,2030040.777275),(9801.39515,2030124.881025),(9965.693325,2030209.018825),(10090.267975,2030335.08855),(10173.10345,2030503.1428),(10295.43275,2030671.333525),(10415.701775,2030839.4102),(10496.48905,2031007.32455),(10579.3335,2031172.471575),(10620.64805,2031334.7923),(10620.42595,2031499.939975),(10661.728325,2031668.054275),(10744.55835,2031836.140675),(10785.862175,2032001.26),(10785.63675,2032166.294825),(10785.407575,2032334.100075),(10785.18205,2032499.2464),(10743.433175,2032664.448125),(10660.158375,2032832.25205),(10618.40865,2033000.0281),(10578.718575,2033167.947425),(10499.564975,2033335.897775),(10418.3587,2033503.706075),(10335.1034,2033668.629725),(10251.855175,2033830.78345),(10129.1675,2033995.658225),(10008.556425,2034163.418775),(9927.22355,2034331.370725),(9802.13775,2034499.1854),(9635.7595,2034624.8603),(9471.680625,2034708.562775),(9309.68195,2034792.2711),(9145.6578,2034834.0299),(8981.6632,2034833.84155),(8819.724475,2034833.65895),(8655.729825,2034833.477475),(8491.755975,2034833.29935),(8329.692675,2034833.126675),(8165.386525,2034832.95505),(8001.225725,2034832.786925),(7839.30775,2034832.6245),(7675.35465,2034832.46345),(7509.324875,2034832.303775),(7343.274325,2034832.14755),(7179.279675,2034831.996625),(7017.19555,2034831.850875),(6852.91015,2034831.7066),(6688.770125,2034831.565775),(6526.797475,2034873.492575),(6362.7359,2034957.483425),(6198.7307,2034999.415275),(6036.805675,2035041.240175),(5872.743375,2035166.967525),(5706.608,2035292.696675),(5542.39785,2035376.4802),(5380.075725,2035499.448025),(5215.863175,2035661.625475),(5051.8008,2035826.716625),(4889.778325,2035994.666775),(4725.70735,2036162.4789),(4561.643325,2036330.182175),(4441.14475,2036497.912525),(4360.12205,2036662.896225),(4235.56685,2036827.969475),(4069.3263,2036995.904775),(3944.40685,2037161.008875),(3863.214475,2037326.05255),(3784.2454,2037493.9524),(3744.721375,2037661.9551),(3784.0826,2037829.88385),(3904.545125,2037997.740575),(4068.721075,2038162.850325),(4234.759825,2038325.1937),(4398.572625,2038448.360425),(4560.367875,2038532.462575),(4724.209275,2038658.65825),(4890.07525,2038826.723525),(5053.907175,2038952.701825),(5215.68705,2039033.934625),(5379.6655,2039112.40175),(5543.82555,2039193.64275),(5705.74685,2039322.487275),(5869.52115,2039493.397225),(5993.860975,2039658.6268),(6076.687575,2039823.7146),(6159.487825,2039991.601475),(6200.82145,2040159.5959),(6200.689375,2040327.6419),(6159.0983,2040492.745125),(6076.049075,2040654.933575),(5992.98045,2040819.893125),(5909.892425,2040987.623725),(5828.86205,2041155.46835),(5749.889275,2041323.455025),(5710.34255,2041491.386475),(5668.745225,2041659.177125)]

# Area-Preserving Segment Collapse
import apsc
apsc_table = apsc.simplificationTable(Missouri) # first create simplification table
apsc_line = apsc.simplifiedLine(apsc_table,-1,25) # simplify to 50 vertices

# Visvalingam & Whyatt
import visvalingam as vw 
vw_simplifier=vw.VWSimplifier(Missouri) # first create simplifier object 
vw_line=vw_simplifier.from_number(25) # simplify to 50 vertices

# Ramer -- Douglas-Peucker:
import douglas_peucker as dp
errors,sorted_errors = dp.get_errors_sortedErrors(Missouri) # obtain sorted errors for each vertex
rdp_line = dp.fast_simplify_by_numPts(Missouri,25,errors,sorted_errors)  # simplify to 50 vertices

# Raposo Spatial Means
import raposo
raposo_line = raposo.simplify_to_n_points_raposo(25,Missouri) # simply to n ~ 50 pts (sometimes will end up with n+1 or n-1)

# **********************************
# plot the results
import matplotlib.pyplot as plt
plt.axis('equal')

lines = [Missouri, apsc_line, rdp_line, raposo_line, vw_line]
labels = ["original","APSC","RDP","RSM","VW"]

offset = 0
for i in range(len(lines)):# original line
    x,y=zip(*lines[i])
    x=[a+offset for a in x]
    plt.plot(x,y)
    plt.text(x[-1],y[-1]+2500,labels[i])
    offset += 7500

plt.show()
# **********************************